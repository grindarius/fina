{
  "New katex element": {
    "prefix": "katex",
    "body": [
      "<katex-element expression=\"$0\" />"
    ],
    "description": "New katex element"
  },
  "New katex element with display=true": {
    "prefix": "katexd",
    "body": [
      "<katex-element expression=\"$0\" :display-mode=\"true\" />"
    ]
  },
  "New vue typescript setup": {
    "prefix": "tssetup",
    "body": [
      "import { Component, Vue } from 'vue-property-decorator'",
      "",
      "@Component",
      "export default class $0 extends Vue {}",
      ""
    ]
  },
  "New vue file setup without scss": {
    "prefix": "vuesetup",
    "body": [
      "<template src=\"$0.html\"></template>",
      "<script lang=\"ts\" src=\"$0.ts\"></script>",
      ""
    ]
  },
  "New vue file setup with scss": {
    "prefix": "vuescsssetup",
    "body": [
      "<template src=\"$0.html\"></template>",
      "<script lang=\"ts\" src=\"$0.ts\"></script>",
      "<style lang=\"scss\" src=\"$0.scss\"></style>",
      ""
    ]
  },
  "New fastify endpoint": {
    "prefix": "ffsetup",
    "body": [
      "import { FastifyInstance, FastifyPluginOptions } from 'fastify'",
      "",
      "export default async function (instance: FastifyInstance, _: FastifyPluginOptions): Promise<void> {",
      "  instance.get('/', async (request, _) => {",
      "    $0",
      "  })",
      "}",
      ""
    ]
  },
  "Section is small": {
    "prefix": "section:small",
    "body": [
      "<section class=\"hero is-small\">",
      "  <div class=\"hero-body\">",
      "    <div class=\"container\">",
      "      $0",
      "    </div>",
      "  </div>",
      "</section>",
      ""
    ]
  }
}
